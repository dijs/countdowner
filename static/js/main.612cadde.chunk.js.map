{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["Screenshots","react_default","a","createElement","className","lib_default","dots","infinite","arrows","alt","src","App","downloads","_React$useState","React","useState","_React$useState2","Object","slicedToArray","setDownloads","fetch","then","res","json","data","assets","windows","find","_ref","name","indexOf","browser_download_url","osx","_ref2","version","useDownloads","href","onClick","window","gtag","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"sLA6BA,SAASA,IACP,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAACE,EAAAH,EAAD,CAAQI,MAAI,EAACC,UAAQ,EAACC,QAAQ,GAC5BP,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,OACEM,IAAI,sBACJC,IAAI,wCAIVT,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,OACEM,IAAI,sBACJC,IAAI,wCAIVT,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,OACEM,IAAI,sBACJC,IAAI,gDAIVT,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,OACEM,IAAI,sBACJC,IAAI,wCAIVT,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,OACEM,IAAI,sBACJC,IAAI,wCAIVT,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,OACEM,IAAI,sBACJC,IAAI,gDAIVT,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,OACEM,IAAI,sBACJC,IAAI,0CA2IHC,MAlIf,WAAe,IACLC,EA1FV,WAAwB,IAAAC,EACYC,IAAMC,WADlBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,GACfD,EADeI,EAAA,GACJG,EADIH,EAAA,GAqBtB,OAnBKJ,GACHQ,MAAM,iEACHC,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAG,GACJ,GAAKA,EAAKC,OAAV,CAGA,IAAMC,EAAUF,EAAKC,OAAOE,KAC1B,SAAAC,GAAA,OAAuC,IAAvCA,EAAGC,KAAgBC,QAAQ,SAC3BC,qBACIC,EAAMR,EAAKC,OAAOE,KAAK,SAAAM,GAAA,OAAuC,IAAvCA,EAAGJ,KAAgBC,QAAQ,SACrDC,qBACHZ,EAAa,CACXe,QAASV,EAAKK,KACdH,UACAM,WAID,CAAEpB,aAqEauB,GAAdvB,UACR,OACEX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,OAAKM,IAAI,mBAAmBC,IAAI,qBAChCT,EAAAC,EAAAC,cAAA,4BACiBF,EAAAC,EAAAC,cAAA,mBAGnBF,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,mDACAF,EAAAC,EAAAC,cAAA,gHAIAF,EAAAC,EAAAC,cAAA,8EACAF,EAAAC,EAAAC,cAAA,2CACAF,EAAAC,EAAAC,cAAA,sFAGAF,EAAAC,EAAAC,cAAA,mHAIAF,EAAAC,EAAAC,cAAA,wDACAF,EAAAC,EAAAC,cAAA,mEACAF,EAAAC,EAAAC,cAAA,kDACAF,EAAAC,EAAAC,cAAA,kFAGAF,EAAAC,EAAAC,cAAA,sHAIAF,EAAAC,EAAAC,cAAA,8FAIAF,EAAAC,EAAAC,cAAA,gJAIAF,EAAAC,EAAAC,cAAA,sDACAF,EAAAC,EAAAC,cAAA,mDACAF,EAAAC,EAAAC,cAAA,oDACAF,EAAAC,EAAAC,cAAA,kIAMAF,EAAAC,EAAAC,cAAA,wFAKAF,EAAAC,EAAAC,cAAA,wEACAF,EAAAC,EAAAC,cAAA,qGAOAF,EAAAC,EAAAC,cAAA,uFAIAF,EAAAC,EAAAC,cAAA,iDACAF,EAAAC,EAAAC,cAAA,mDACAF,EAAAC,EAAAC,cAAA,oCAC0BS,EAAYA,EAAUsB,QAAU,MAD1D,mCAKFjC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACZQ,GACCX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,KACEiC,KAAMxB,EAAUoB,IAChBK,QAAS,kBAAMC,OAAOC,KAAK,QAAS,kBAEpCtC,EAAAC,EAAAC,cAAA,4CAEFF,EAAAC,EAAAC,cAAA,KACEiC,KAAMxB,EAAUc,QAChBW,QAAS,kBAAMC,OAAOC,KAAK,QAAS,iBAEpCtC,EAAAC,EAAAC,cAAA,2CAEFF,EAAAC,EAAAC,cAAA,oGAIAF,EAAAC,EAAAC,cAAA,yFAMJF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,mJAMFF,EAAAC,EAAAC,cAACH,EAAD,MACAC,EAAAC,EAAAC,cAAA,KACEC,UAAU,YACVgC,KAAK,+FAELnC,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,gCADF,IACkCF,EAAAC,EAAAC,cAAA,WADlC,qCAONF,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,OAAKM,IAAI,aAAaC,IAAI,8BAD5B,+HC3Mc8B,QACW,cAA7BF,OAAOG,SAASC,UAEe,UAA7BJ,OAAOG,SAASC,UAEhBJ,OAAOG,SAASC,SAASC,MACvB,2DCbNC,IAASC,OAAO5C,EAAAC,EAAAC,cAAC2C,EAAD,MAASC,SAASC,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM9B,KAAK,SAAA+B,GACjCA,EAAaC","file":"static/js/main.612cadde.chunk.js","sourcesContent":["import React from 'react';\nimport Slider from 'react-slick';\n\nimport './main.scss';\n\nfunction useDownloads() {\n  const [downloads, setDownloads] = React.useState();\n  if (!downloads) {\n    fetch('https://api.github.com/repos/dijs/countdowner/releases/latest')\n      .then(res => res.json())\n      .then(data => {\n        if (!data.assets) {\n          return;\n        }\n        const windows = data.assets.find(\n          ({ name }) => name.indexOf('exe') !== -1\n        ).browser_download_url;\n        const osx = data.assets.find(({ name }) => name.indexOf('dmg') !== -1)\n          .browser_download_url;\n        setDownloads({\n          version: data.name,\n          windows,\n          osx\n        });\n      });\n  }\n  return { downloads };\n}\n\nfunction Screenshots() {\n  return (\n    <div className=\"screenshots\">\n      <Slider dots infinite arrows={false}>\n        <div>\n          <figure>\n            <img\n              alt=\"countdowner preview\"\n              src=\"/images/countdowner-preview-1.png\"\n            />\n          </figure>\n        </div>\n        <div>\n          <figure>\n            <img\n              alt=\"countdowner preview\"\n              src=\"/images/countdowner-preview-2.png\"\n            />\n          </figure>\n        </div>\n        <div>\n          <figure>\n            <img\n              alt=\"countdowner preview\"\n              src=\"/images/countdowner-preview-setting-1.png\"\n            />\n          </figure>\n        </div>\n        <div>\n          <figure>\n            <img\n              alt=\"countdowner preview\"\n              src=\"/images/countdowner-preview-3.png\"\n            />\n          </figure>\n        </div>\n        <div>\n          <figure>\n            <img\n              alt=\"countdowner preview\"\n              src=\"/images/countdowner-preview-4.png\"\n            />\n          </figure>\n        </div>\n        <div>\n          <figure>\n            <img\n              alt=\"countdowner preview\"\n              src=\"/images/countdowner-preview-setting-2.png\"\n            />\n          </figure>\n        </div>\n        <div>\n          <figure>\n            <img\n              alt=\"countdowner preview\"\n              src=\"/images/countdowner-preview-5.png\"\n            />\n          </figure>\n        </div>\n      </Slider>\n    </div>\n  );\n}\n\nfunction App() {\n  const { downloads } = useDownloads();\n  return (\n    <div className=\"container\">\n      <header>\n        <img alt=\"countdowner logo\" src=\"/images/logo.png\" />\n        <h1>\n          CountdownerBeta<sup>tm</sup>\n        </h1>\n      </header>\n      <main>\n        <aside>\n          <h2>Features Added to Beta (this version)</h2>\n          <p>\n            • Tool tips on settings and a way to disable them when you get to\n            know your way around the app\n          </p>\n          <p>• Updated setting verbiage for ease of use and understanding</p>\n          <p>• Added 5 new sound bites</p>\n          <p>\n            • Redesigned the speed sliders to show slow, normal, and fast speeds\n          </p>\n          <p>\n            • Added a setting to force and disable the window being brought to\n            the front of all other windows\n          </p>\n          <h2>Features Added to Beta (previous versions)</h2>\n          <p>• Settings persist when closing and reopening app</p>\n          <p>• Dynamic Sizing from the Corner</p>\n          <p>\n            • A Color Slider in Settings For the main Color of Default Theme\n          </p>\n          <p>\n            • A New Monochromatic and Car Dashboard Theme (we are working on a\n            color picker for the car as well)\n          </p>\n          <h2>\n            Ideas We've Received (if you agree please tell us so we know if\n            they're popular)\n          </h2>\n          <p>\n            • Soundtrack interval setting: to start the track every minute as a\n            signal to the audience of how quickly the time is passing.\n          </p>\n          <p>• Blinking timer as it nears the end</p>\n          <p>• A blank soundtrack/alarm option</p>\n          <p>• Add a drum roll soundtrack/alarm</p>\n          <p>\n            • Settings Menu: Add a quick start option, or allow for a shallow\n            and in-depth view of the many setting options.\n          </p>\n          {/*enable sound preview ON for default setting*/}\n          {/*legibility issue appears in the futuristic mode specifically*/}\n          <p>\n            • In-depth legibility testing on themes for both laptop and\n            projection\n          </p>\n          {/*Change font and overall size in some themes*/}\n          <p>• A email subscription button for app updates and news</p>\n          <p>\n            • Enlarge the live countdown to take up more real estate when your\n            window is large.\n          </p>\n          {/*Make the start button easier to find in the settings*/}\n          {/*remove extra space Apply Settings/-Return to Timer */}\n          {/*clay requested we default off on the tooltips - but I think during beta that's not a great idea*/}\n          <p>\n            • Add a dark mode and a khaki theme with a customizable primary\n            color\n          </p>\n          <p>• Add a Military and Navy theme</p>\n          <p>• Add seasonal and holiday themes</p>\n          <h4>\n            Current Beta Version | {downloads ? downloads.version : '...'} |\n            Last updated: July 16, 2019\n          </h4>\n        </aside>\n        <div className=\"right-side\">\n          {downloads && (\n            <div className=\"downloads\">\n              <a\n                href={downloads.osx}\n                onClick={() => window.gtag('event', 'mac download')}\n              >\n                <button>Download the Beta for MAC</button>\n              </a>\n              <a\n                href={downloads.windows}\n                onClick={() => window.gtag('event', 'pc download')}\n              >\n                <button>Download the Beta for PC</button>\n              </a>\n              <p>\n                Since the application is still under development, it will show a\n                warning for Mac users.\n              </p>\n              <p>\n                Please Control-click the app icon, then choose Open from the\n                shortcut menu.\n              </p>\n            </div>\n          )}\n          <div className=\"phone-message\">\n            <p>\n              Currently this application is only available for desktops. Please\n              comeback soon and download this Beta application on your Mac or\n              PC.\n            </p>\n          </div>\n          <Screenshots />\n          <a\n            className=\"mailchimp\"\n            href=\"https://leathgroup.us11.list-manage.com/subscribe?u=cc3bf1826d2b3277c2779ca42&id=fd85f2bc93\"\n          >\n            <button>\n              <strong>Subscribe Here</strong> <br />\n              for News, Updates, and Surveys\n            </button>\n          </a>\n        </div>\n      </main>\n      <footer>\n        <img alt=\"leath logo\" src=\"/images/LeathRedSmall.png\" />\n        If you are interested in helping with our beta test by providing\n        feedback on this app, please email team@vanderdys.design\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}